
import javax.swing.*;
import java.util.ArrayList;

// Clase base abstracta Equipo
abstract class Equipo {
    private String fabricante;
    private String modelo;
    private String microprocesador;

    public Equipo(String fabricante, String modelo, String microprocesador) {
        this.fabricante = fabricante;
        this.modelo = modelo;
        this.microprocesador = microprocesador;
    }

    // Getters
    public String getFabricante() { return fabricante; }
    public String getModelo() { return modelo; }
    public String getMicroprocesador() { return microprocesador; }

    // Método abstracto para mostrar información
    public abstract String mostrarInfo();
}

// Subclase Desktop
class Desktop extends Equipo {
    private String memoria;
    private String tarjetaGrafica;
    private String tamanoTorre;
    private String capacidadDiscoDuro;

    public Desktop(String fabricante, String modelo, String microprocesador, 
                   String memoria, String tarjetaGrafica, String tamanoTorre, 
                   String capacidadDiscoDuro) {
        super(fabricante, modelo, microprocesador);
        this.memoria = memoria;
        this.tarjetaGrafica = tarjetaGrafica;
        this.tamanoTorre = tamanoTorre;
        this.capacidadDiscoDuro = capacidadDiscoDuro;
    }

    @Override
    public String mostrarInfo() {
        return "Fabricante: " + getFabricante() + "\n" +
               "Modelo: " + getModelo() + "\n" +
               "Microprocesador: " + getMicroprocesador() + "\n" +
               "Memoria: " + memoria + "\n" +
               "Tarjeta gráfica: " + tarjetaGrafica + "\n" +
               "Tamaño de torre: " + tamanoTorre + "\n" +
               "Capacidad de disco duro: " + capacidadDiscoDuro;
    }
}

// Subclase Laptop
class Laptop extends Equipo {
    private String memoria;
    private String tamanoPantalla;
    private String capacidadDiscoDuro;

    public Laptop(String fabricante, String modelo, String microprocesador, 
                  String memoria, String tamanoPantalla, String capacidadDiscoDuro) {
        super(fabricante, modelo, microprocesador);
        this.memoria = memoria;
        this.tamanoPantalla = tamanoPantalla;
        this.capacidadDiscoDuro = capacidadDiscoDuro;
    }

    @Override
    public String mostrarInfo() {
        return "Fabricante :: " + getFabricante() + "\n" +
               "Modelo: " + getModelo() + "\n" +
               "Microprocesador: " + getMicroprocesador() + "\n" +
               "Memoria: " + memoria + "\n" +
               "Tamaño pantalla: " + tamanoPantalla + "\n" +
               "Capacidad de disco duro: " + capacidadDiscoDuro;
    }
}

// Subclase Tablet
class Tablet extends Equipo {
    private String tamanoPantalla;
    private String tipoPantalla;
    private String memoriaNAND;
    private String sistemaOperativo;

    public Tablet(String fabricante, String modelo, String microprocesador, 
                  String tamanoPantalla, String tipoPantalla, 
                  String memoriaNAND, String sistemaOperativo) {
        super(fabricante, modelo, microprocesador);
        this.tamanoPantalla = tamanoPantalla;
        this.tipoPantalla = tipoPantalla ;
        this.memoriaNAND = memoriaNAND;
        this.sistemaOperativo = sistemaOperativo;
    }

    @Override
    public String mostrarInfo() {
        return "Fabricante: " + getFabricante() + "\n" +
               "Modelo: " + getModelo() + "\n" +
               "Microprocesador: " + getMicroprocesador() + "\n" +
               "Tamaño diagonal de pantalla: " + tamanoPantalla + "\n" +
               "¿Capacitiva/Resistiva? " + tipoPantalla + "\n" +
               "Tamaño memoria NAND: " + memoriaNAND + "\n" +
               "Sistema Operativo: " + sistemaOperativo;
    }
}
public class Programa extends javax.swing.JPanel {
    private static ArrayList<Desktop> desktops = new ArrayList<>();
    private static ArrayList<Laptop> laptops = new ArrayList<>();
    private static ArrayList<Tablet> tablets = new ArrayList<>();
    
    private javax.swing.JButton btnRegistrar;
    private javax.swing.JButton btnVer;
    private javax.swing.JButton btnSalir;
    private javax.swing.JLabel lblTitulo;
    public Programa() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 621, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 381, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
